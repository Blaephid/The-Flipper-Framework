//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/BumperEngineV1/Scripts/Player/Input/Player New Input.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerNewInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerNewInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player New Input"",
    ""maps"": [
        {
            ""name"": ""CharacterActions"",
            ""id"": ""f1b0d390-548c-40f2-b41b-86886bebf97b"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8529a1de-9bd1-4518-ad3b-cfe8981821d7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""a38ec717-f8d6-4a53-8d1d-a241f2e03ec7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Step"",
                    ""type"": ""Button"",
                    ""id"": ""5ed51153-2563-4af4-b8f6-d1b12e91035a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Step"",
                    ""type"": ""Button"",
                    ""id"": ""2ff376d6-82f3-49e3-828f-5000a11f1e67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera Reset"",
                    ""type"": ""Button"",
                    ""id"": ""4d7db252-32c7-4b25-b388-d9a4865aba16"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e16675b5-a1e2-4aeb-9ea2-e97861123be7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skid"",
                    ""type"": ""Button"",
                    ""id"": ""27482aec-dc87-42ba-a8cd-fc41c580d62f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special"",
                    ""type"": ""Button"",
                    ""id"": ""5bb5a42e-40c8-49c6-b048-c6dcc9e5470f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Power"",
                    ""type"": ""Button"",
                    ""id"": ""72c5b798-ddb9-4337-8ed1-9d4ff96d8a24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""be07ed71-6d60-4577-afa7-dae5db515c54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Homing"",
                    ""type"": ""Button"",
                    ""id"": ""301007e5-d40f-446c-8882-54e8bc81d451"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""e3aeaf97-de8e-4711-9b49-53d70a1bd978"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveMouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""292a2e7e-9e7d-4eff-a838-972dd25ccb9b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""KillBind"",
                    ""type"": ""Button"",
                    ""id"": ""a583bc34-1310-4e7c-a19a-6871a044e276"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpinChargePressed"",
                    ""type"": ""Button"",
                    ""id"": ""b5a2c673-34a7-4de0-805b-06900520bba4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d316bde9-c987-473c-8c86-d65e7b873642"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.01,max=0.95)"",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""fb5cbc24-8601-4a65-a9c2-4db3c76ffd7d"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""76367a0f-590c-4d53-8f28-38b7a7223b42"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""00170574-7924-46c3-bcf3-143e7ee9e936"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5886dc75-636e-4627-9a71-d2e2b43a2562"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""00971f9f-84a4-4b88-bb6e-8bf164cec730"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""21315f38-6b52-4235-914c-773ed3ccbce3"",
                    ""path"": ""<SwitchProControllerHID>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e61f27aa-5076-4af7-b7c4-982939fc47ee"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4866659d-4d11-4ce7-8f83-a655861799a8"",
                    ""path"": ""<SwitchProControllerHID>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Step"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6c802c2d-7122-49c0-bf86-b8f232e10941"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Step"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7f3da4d-cbb5-45fe-a50f-b9e44c0772f8"",
                    ""path"": ""<SwitchProControllerHID>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Step"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21d226f1-9c62-4df6-afa9-ee6d59aa6b40"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Left Step"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""758f026a-9c19-49ac-9bd7-2e02ac4f3fbd"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3cc9dc9-c695-48db-927c-460f8c419a19"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""df8faad7-fdb8-4951-b6f5-d4455e748085"",
                    ""path"": ""<SwitchProControllerHID>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""622f9042-935c-4edc-94cf-5d5540b315b2"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f67524d4-9ee2-476d-8645-e7ce21803f45"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0132b66c-5c52-4ab3-bd33-ca0367d5c1c7"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""826e107b-37fd-4e52-8610-44fd318741a9"",
                    ""path"": ""<SwitchProControllerHID>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44f484a4-66f1-4d55-80ab-79d55c0ee0ba"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1563ae7-6bcf-4448-9364-63596b523e20"",
                    ""path"": ""<SwitchProControllerHID>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5497da9-8f7c-489b-a4ff-e7939ee5dda1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ded48a87-5e06-4e74-be24-c42bd32a4db5"",
                    ""path"": ""<SwitchProControllerHID>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""25093f7f-b28b-49a3-b505-43f494e78358"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Power"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3bcfa2e-5126-43c0-8fd7-ec21dac645e6"",
                    ""path"": ""<SwitchProControllerHID>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72bcd7bd-2d9c-4b3e-9605-3b9ece1d690d"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0d85df9-2134-4016-a88c-c0c402b59ddd"",
                    ""path"": ""<SwitchProControllerHID>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Homing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d863c82-b9e5-4670-b5e4-e087f8807c7a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Homing"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f07a00aa-e485-4c56-a637-38ed3c504180"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0d4e3875-507d-4117-9fa9-fe912ba5eb66"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2a9b680e-cb47-4176-9f80-48d0f8c2dab3"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""52a4b171-07ea-4c85-b49f-4b42d6a34651"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""69e497a0-d314-4a36-bf14-0570e04a5407"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9d63078b-43c4-4296-97e2-d1af553e6966"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e50af8ba-96fa-4908-89b3-ef5da7284475"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c595eaf9-a57e-4940-9046-2f0644858083"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""KillBind"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68fe8a1c-63a9-4426-b0c7-7d7faf3c0f68"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpinChargePressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CharacterActions
        m_CharacterActions = asset.FindActionMap("CharacterActions", throwIfNotFound: true);
        m_CharacterActions_Movement = m_CharacterActions.FindAction("Movement", throwIfNotFound: true);
        m_CharacterActions_Roll = m_CharacterActions.FindAction("Roll", throwIfNotFound: true);
        m_CharacterActions_RightStep = m_CharacterActions.FindAction("Right Step", throwIfNotFound: true);
        m_CharacterActions_LeftStep = m_CharacterActions.FindAction("Left Step", throwIfNotFound: true);
        m_CharacterActions_CameraReset = m_CharacterActions.FindAction("Camera Reset", throwIfNotFound: true);
        m_CharacterActions_Jump = m_CharacterActions.FindAction("Jump", throwIfNotFound: true);
        m_CharacterActions_Skid = m_CharacterActions.FindAction("Skid", throwIfNotFound: true);
        m_CharacterActions_Special = m_CharacterActions.FindAction("Special", throwIfNotFound: true);
        m_CharacterActions_Power = m_CharacterActions.FindAction("Power", throwIfNotFound: true);
        m_CharacterActions_Interact = m_CharacterActions.FindAction("Interact", throwIfNotFound: true);
        m_CharacterActions_Homing = m_CharacterActions.FindAction("Homing", throwIfNotFound: true);
        m_CharacterActions_Move = m_CharacterActions.FindAction("Move", throwIfNotFound: true);
        m_CharacterActions_MoveMouse = m_CharacterActions.FindAction("MoveMouse", throwIfNotFound: true);
        m_CharacterActions_KillBind = m_CharacterActions.FindAction("KillBind", throwIfNotFound: true);
        m_CharacterActions_SpinChargePressed = m_CharacterActions.FindAction("SpinChargePressed", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CharacterActions
    private readonly InputActionMap m_CharacterActions;
    private ICharacterActionsActions m_CharacterActionsActionsCallbackInterface;
    private readonly InputAction m_CharacterActions_Movement;
    private readonly InputAction m_CharacterActions_Roll;
    private readonly InputAction m_CharacterActions_RightStep;
    private readonly InputAction m_CharacterActions_LeftStep;
    private readonly InputAction m_CharacterActions_CameraReset;
    private readonly InputAction m_CharacterActions_Jump;
    private readonly InputAction m_CharacterActions_Skid;
    private readonly InputAction m_CharacterActions_Special;
    private readonly InputAction m_CharacterActions_Power;
    private readonly InputAction m_CharacterActions_Interact;
    private readonly InputAction m_CharacterActions_Homing;
    private readonly InputAction m_CharacterActions_Move;
    private readonly InputAction m_CharacterActions_MoveMouse;
    private readonly InputAction m_CharacterActions_KillBind;
    private readonly InputAction m_CharacterActions_SpinChargePressed;
    public struct CharacterActionsActions
    {
        private @PlayerNewInput m_Wrapper;
        public CharacterActionsActions(@PlayerNewInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_CharacterActions_Movement;
        public InputAction @Roll => m_Wrapper.m_CharacterActions_Roll;
        public InputAction @RightStep => m_Wrapper.m_CharacterActions_RightStep;
        public InputAction @LeftStep => m_Wrapper.m_CharacterActions_LeftStep;
        public InputAction @CameraReset => m_Wrapper.m_CharacterActions_CameraReset;
        public InputAction @Jump => m_Wrapper.m_CharacterActions_Jump;
        public InputAction @Skid => m_Wrapper.m_CharacterActions_Skid;
        public InputAction @Special => m_Wrapper.m_CharacterActions_Special;
        public InputAction @Power => m_Wrapper.m_CharacterActions_Power;
        public InputAction @Interact => m_Wrapper.m_CharacterActions_Interact;
        public InputAction @Homing => m_Wrapper.m_CharacterActions_Homing;
        public InputAction @Move => m_Wrapper.m_CharacterActions_Move;
        public InputAction @MoveMouse => m_Wrapper.m_CharacterActions_MoveMouse;
        public InputAction @KillBind => m_Wrapper.m_CharacterActions_KillBind;
        public InputAction @SpinChargePressed => m_Wrapper.m_CharacterActions_SpinChargePressed;
        public InputActionMap Get() { return m_Wrapper.m_CharacterActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CharacterActionsActions set) { return set.Get(); }
        public void SetCallbacks(ICharacterActionsActions instance)
        {
            if (m_Wrapper.m_CharacterActionsActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMovement;
                @Roll.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnRoll;
                @RightStep.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnRightStep;
                @RightStep.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnRightStep;
                @RightStep.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnRightStep;
                @LeftStep.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnLeftStep;
                @LeftStep.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnLeftStep;
                @LeftStep.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnLeftStep;
                @CameraReset.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnCameraReset;
                @CameraReset.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnCameraReset;
                @CameraReset.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnCameraReset;
                @Jump.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnJump;
                @Skid.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSkid;
                @Skid.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSkid;
                @Skid.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSkid;
                @Special.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSpecial;
                @Special.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSpecial;
                @Special.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSpecial;
                @Power.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnPower;
                @Power.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnPower;
                @Power.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnPower;
                @Interact.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnInteract;
                @Homing.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnHoming;
                @Homing.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnHoming;
                @Homing.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnHoming;
                @Move.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMove;
                @MoveMouse.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMoveMouse;
                @MoveMouse.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMoveMouse;
                @MoveMouse.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnMoveMouse;
                @KillBind.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnKillBind;
                @KillBind.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnKillBind;
                @KillBind.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnKillBind;
                @SpinChargePressed.started -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSpinChargePressed;
                @SpinChargePressed.performed -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSpinChargePressed;
                @SpinChargePressed.canceled -= m_Wrapper.m_CharacterActionsActionsCallbackInterface.OnSpinChargePressed;
            }
            m_Wrapper.m_CharacterActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @RightStep.started += instance.OnRightStep;
                @RightStep.performed += instance.OnRightStep;
                @RightStep.canceled += instance.OnRightStep;
                @LeftStep.started += instance.OnLeftStep;
                @LeftStep.performed += instance.OnLeftStep;
                @LeftStep.canceled += instance.OnLeftStep;
                @CameraReset.started += instance.OnCameraReset;
                @CameraReset.performed += instance.OnCameraReset;
                @CameraReset.canceled += instance.OnCameraReset;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Skid.started += instance.OnSkid;
                @Skid.performed += instance.OnSkid;
                @Skid.canceled += instance.OnSkid;
                @Special.started += instance.OnSpecial;
                @Special.performed += instance.OnSpecial;
                @Special.canceled += instance.OnSpecial;
                @Power.started += instance.OnPower;
                @Power.performed += instance.OnPower;
                @Power.canceled += instance.OnPower;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Homing.started += instance.OnHoming;
                @Homing.performed += instance.OnHoming;
                @Homing.canceled += instance.OnHoming;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @MoveMouse.started += instance.OnMoveMouse;
                @MoveMouse.performed += instance.OnMoveMouse;
                @MoveMouse.canceled += instance.OnMoveMouse;
                @KillBind.started += instance.OnKillBind;
                @KillBind.performed += instance.OnKillBind;
                @KillBind.canceled += instance.OnKillBind;
                @SpinChargePressed.started += instance.OnSpinChargePressed;
                @SpinChargePressed.performed += instance.OnSpinChargePressed;
                @SpinChargePressed.canceled += instance.OnSpinChargePressed;
            }
        }
    }
    public CharacterActionsActions @CharacterActions => new CharacterActionsActions(this);
    public interface ICharacterActionsActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnRightStep(InputAction.CallbackContext context);
        void OnLeftStep(InputAction.CallbackContext context);
        void OnCameraReset(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSkid(InputAction.CallbackContext context);
        void OnSpecial(InputAction.CallbackContext context);
        void OnPower(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnHoming(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnMoveMouse(InputAction.CallbackContext context);
        void OnKillBind(InputAction.CallbackContext context);
        void OnSpinChargePressed(InputAction.CallbackContext context);
    }
}
